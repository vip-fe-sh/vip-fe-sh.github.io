[{"title":"前端组件化方案探讨","url":"http://vip-fe-sh.com/2016/04/13/think-about-frontend-componentization-solution/","content":"<h1 id=\"前端组件化方案探讨\"><a href=\"#前端组件化方案探讨\" class=\"headerlink\" title=\"前端组件化方案探讨\"></a>前端组件化方案探讨</h1><p>前端组件化这个词已经被玩了很久了，angular，react也流行了很久，在我们团队，由于是内部应用项目，目前的架构设计比较简单，对后续的维护和扩展都不太方便，所以最近也在尝试接入比较先进的组件化模式，本文记录一些改造过程中的思考。</p>\n<h3 id=\"一切皆组件\"><a href=\"#一切皆组件\" class=\"headerlink\" title=\"一切皆组件\"></a>一切皆组件</h3><p>组件化的核心是解耦和分治，为此我们需要改变传统的网页开发思维，之前通常的做法是先写出页面的html结构和css样式，然后完成js脚本，这种方式通常是把页面作为一个整体来考虑的，而组件化的基本思想就是一切皆组件，大到页面、路由，小到按钮、图片，都可以认为是一个独立的组件，每个组件包含它自己的html、css和js部分，根据状态和属性的不同呈现不同的展现，通过各种组件的组合和嵌套，我们就得到了一个完整的页面。</p>\n<h3 id=\"组件维度\"><a href=\"#组件维度\" class=\"headerlink\" title=\"组件维度\"></a>组件维度</h3><p>既然说到一切皆组件，那么在划分组件的时候如何控制粒度也是一个问题，往细了划分可以分到标签维度，这样子我们可以定义一套自己的基础标签，然后往上生成一套基础控件，再往上是模块，页面，这种方式复用性极高，但是工程量很大，还需要一套完善的组件设计规范；往粗了划分就是按照可见的功能区块进行分，这种方式实现效率高，但是复用性要差一些，所以在实际开发中还是要根据项目情况把控组件粒度，在开发效率和可复用性中找到一个平衡。</p>\n<h3 id=\"数据传递\"><a href=\"#数据传递\" class=\"headerlink\" title=\"数据传递\"></a>数据传递</h3><p>组件的数据决定了组件的展现，对于组件数据，建议的做法是统一管理，所有的数据、更改数据的方法、加载数据的方法，集中在一处管理，由页面根组件把数据分别派发到各个组件，类似facebook的flux架构，这样子可以有效的控制数据的流向和数据源的唯一性。</p>\n"},{"title":"Hello World","url":"http://vip-fe-sh.com/2016/04/05/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n"}]